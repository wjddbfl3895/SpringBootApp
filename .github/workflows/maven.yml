# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]  # 브랜치에 푸시될 때 실행
  pull_request:
    branches: [ "main" ]  # 풀 리퀘스트 시 실행

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4  # 코드 체크아웃

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven

    - name: Build with Maven
      run: mvn clean package -DskipTests -f ./SpringBootApp/pom.xml

    - name: Log in to Docker Hub
      uses: docker/login-action@v2  # Docker 로그인
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build Docker Image
      run: |
        docker build -t jeongyuri/springbootapp:2.0 ./SpringBootApp
        docker tag jeongyuri/springbootapp:2.0 jeongyuri/springbootapp:latest

    - name: Push Docker Images to Docker Hub
      run: |
        docker push jeongyuri/springbootapp:2.0
        docker push jeongyuri/springbootapp:latest
